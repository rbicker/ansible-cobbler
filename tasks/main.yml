---
# tasks file for rbicker.cobbler

- name: ensure required packages are installed
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - createrepo
    - httpd
    - mod_wsgi
    - mod_ssl
    - python-cheetah
    - python-netaddr
    - python-simplejson
    - python-urlgrabber
    - PyYAML
    - rsync
    - syslinux
    - tftp-server
    - yum-utils
    - python-django
    - debmirror
    - pykickstart
    - fence-agents-all
    - bind
    - bind-chroot
    - cobbler

- name: ensure httpd can talk to cobblerd (selinux)
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: ensure httpd service is enabled
  service:
    name: httpd
    enabled: yes

- name: ensure tftp service is enabled and started
  service:
    name: tftp
    enabled: yes
    state: started

- name: ensure named-chroot is enabled and started
  service:
    name: named-chroot
    enabled: yes
    state: started

- name: ensure cobbler services is enabled and started
  service:
    name: cobblerd
    enabled: yes
    state: started
  notify: restart apache

- name: ensure server is set in /etc/cobbler/settings
  lineinfile:
    line: "server: {{ ansible_default_ipv4.address }}"
    regexp: "^server:"
    dest: /etc/cobbler/settings
  notify: restart cobblerd

- name: ensure server is set in /etc/cobbler/settings
  lineinfile:
    line: "next_server: {{ ansible_default_ipv4.address }}"
    regexp: "^next_server:"
    dest: /etc/cobbler/settings
  notify: restart cobblerd

- name: ensure default_password_crypted is set in /etc/cobbler/settings
  lineinfile:
    line: "default_password_crypted: {{ cobbler_default_password_crypted }}"
    regexp: "^default_password_crypted:"
    dest: /etc/cobbler/settings
  notify: restart cobblerd

- name: ensure dns management is enabled in /etc/cobbler/settings
  lineinfile:
    line: "manage_dns: 1"
    regexp: "^manage_dns:"
    dest: /etc/cobbler/settings
  notify: restart cobblerd
  when: cobbler_manage_dns
  register: cobbler_dns_enabled

- name: ensure /etc/secondary.conf exists with se type cobbler_var_lib_t
  file:
    state: touch
    setype: cobbler_var_lib_t
    path: /etc/secondary.conf
  when: cobbler_dns_enabled.changed

- name: ensure dns forward zones are set in /etc/cobbler/settings
  lineinfile:
    line: "manage_forward_zones: {{ cobbler_manage_forward_zones }}"
    regexp: "^manage_forward_zones:"
    dest: /etc/cobbler/settings
  notify: restart cobblerd
  when: cobbler_manage_dns

- name: ensure dns reverse zones are set in /etc/cobbler/settings
  lineinfile:
    line: "manage_reverse_zones: {{ cobbler_manage_reverse_zones }}"
    regexp: "^manage_reverse_zones:"
    dest: /etc/cobbler/settings
  notify: restart cobblerd
  when: cobbler_manage_dns

- name: ensure di_dists directive is set in /etc/debmirror.conf
  lineinfile:
    line: "@di_dists=\"dists\";"
    regexp: "@di_dists="
    dest: /etc/debmirror.conf

- name: ensure di_archs directive is set in /etc/debmirror.conf
  lineinfile:
    line: "@di_archs=\"arches\";"
    regexp: "@di_archs="
    dest: /etc/debmirror.conf

- name: ensure cobbler profile folder exists in /var/www/cobbler/ks_mirror/
  file:
    path: "/var/www/cobbler/ks_mirror/{{ item.name }}-{{ item.arch }}"
    state: directory
  with_items: "{{ cobbler_profiles }}"
  register: cobbler_profiles_folders

- name: ensure folder for iso files exist
  file:
    path: "{{ cobbler_iso_path }}"
    state: directory

- name: ensure iso mount path exists
  file:
    path: "{{ cobbler_iso_mount_path }}"
    state: directory

- name: ensure iso files are present
  get_url:
    url: "{{ item.item.url }}"
    dest: "{{ cobbler_iso_path }}/{{ item.item.name }}.iso"
  with_items: "{{ cobbler_profiles_folders.results }}"
  when: item.changed == true

- name: ensure isos are mounted
  mount:
    src: "{{ cobbler_iso_path }}/{{ item.item.name }}.iso"
    path: "{{ cobbler_iso_mount_path }}/{{ item.item.name }}"
    opts: ro
    fstype: iso9660
    state: mounted
  when: item.changed == true
  with_items: "{{ cobbler_profiles_folders.results }}"

- name: ensure distros are imported
  shell: "cobbler profile list --name={{ item.item.name }}-{{ item.item.arch }} || cobbler import --name={{item.item.name}} --arch={{ item.item.arch }} --path={{ cobbler_iso_mount_path }}/{{ item.item.name }}"
  when: item.changed == true
  with_items: "{{ cobbler_profiles_folders.results }}"

